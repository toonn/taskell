name: Release 32bit binary

on: [push]
#on:
#  push:
#    # Sequence of patterns matched against refs/tags
#    tags:
#    - '*.*.*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install Nix
        uses: cachix/install-nix-action@v12
      - name: Setup Cachix
        uses: cachix/cachix-action@v8
        with:
          name: taskell
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      - name: Build 32bit taskell
        run: |
          nix-build -E 'import ./default.nix {}'
      - name: Set tag.name
        id: tag
        run: echo ::set-output name=name::${GITHUB_REF#refs/tags/}
      - name: Set archive.name
        id: archive
        run: |
          echo "::set-output name=name::taskell_${{ steps.tag.name }}_Linux-32bit.tar.gz"
      - name: Archive 32bit taskell
        run: |
          tar cf ${{ steps.archive.name }} ./result/bin/taskell
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tag.name }}
          release_name: Release ${{ steps.tag.name }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./${{ steps.archive.name }}
          asset_name: ${{ steps.archive.name }}
          asset_content_type: application/gzip
